version: '3.6'
services:
#  qemu:
#    container_name: qemu
#    image: qemux/qemu-arm
#    environment:
#      DISK_SIZE: "20G"
#      RAM_SIZE: "4G"
#      CPU_COUNT: "4"
##      ARGUMENTS: "-machine virt -cpu cortex-a72 -smp 4 -m 4G -kernel Image -drive format=raw,file=/boot.img,if=none,id=hd0,cache=writeback -device virtio-blk,drive=hd0,bootindex=0 -netdev user,id=mynet,hostfwd=tcp::2222-:22 -device virtio-net-pci,netdev=mynet -monitor telnet:127.0.0.1:5555,server,nowait"
#      ARGUMENTS: "-M raspi4b -cpu cortex-a72 -m 4G -smp 4 -nographic -kernel /Image -append \"rw earlyprintk loglevel=8 console=ttyAMA0,115200 dwc_otg.lpm_enable=0\" -device usb-net,netdev=net0 -netdev user,id=net0,hostfwd=tcp::2222-:22,hostfwd=tcp::8086-:8086"
#    devices:
#      - /dev/kvm
#    cap_add:
#      - NET_ADMIN
#    ports:
#      - 8006:8006
#    stop_grace_period: 2m
#    volumes:
#      - ./raspos.img:/boot.img
#      - ./Image:/Image
#    logging:
#      driver: json-file
#    # set resources
#    deploy:
#      resources:
#        limits:
#          cpus: '4'
#          memory: 4G
#        reservations:
#          cpus: '4'
#          memory: 4G
  dockerized_pi:
    container_name: dockerized_pi4
    image: registry.gitlab.inria.fr/stream-processing-autoscaling/scalehub/dockerized_rpi4
#    build:
#      context: .
#      dockerfile: Dockerfile
    environment:
        DISK_SIZE: "20G"
        RAM_SIZE: "2G"
        CPU_CORES: "4"
    devices:
      - /dev/kvm
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '2'
          memory: 4G
    logging:
        driver: json-file
    volumes:
      - ./Image:/mnt/kernel
      - ./raspos.img:/mnt/raspos.img



