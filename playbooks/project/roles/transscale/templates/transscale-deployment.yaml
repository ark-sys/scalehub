apiVersion: apps/v1
kind: Deployment
metadata:
  name: transscale
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transscale
  template:
    metadata:
      labels:
        app: transscale

    spec:
      terminationGracePeriodSeconds: 0
      imagePullSecrets:
        - name: gitlab-registry-s
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      containers:
        - name: transscale
          image: "registry.gitlab.inria.fr/apagliar/transscale:dockerization"
          imagePullPolicy: Always
          resources:
            limits:
              memory: 4Gi
              cpu: 200m
          command: ['sleep', 'infinity']
          tty: true
          volumeMounts:
            - name: transscale-config-volume
              mountPath: /etc/transscale/conf
            - name: kubeconfig-volume
              mountPath: /kubeconfig
              readOnly: true
            - name: artifacts-volume
              mountPath: /etc/transscale/jobs
      volumes:
        - name: kubeconfig-volume
          secret:
            secretName: transscale-secret
            items:
              - key: kubeconfig
                path: kubeconfig
        - name: transscale-config-volume
          configMap:
            name: transscale-config
            items:
              - key: transscale.conf
                path: transscale.conf
        - name: artifacts-volume
          persistentVolumeClaim:
            claimName: artifacts-pvc
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule