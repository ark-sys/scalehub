---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ lg_name }}"
  namespace: default
  labels:
      app: load-generator
      type: load-generator
spec:
  selector:
    matchLabels:
      app: "{{ lg_name }}"
      type: load-generator
  replicas: {{ lg_replicas }}
  template:
    metadata:
      labels:
        app: "{{ lg_name }}"
        type: load-generator
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: producer
      terminationGracePeriodSeconds: 0
      imagePullSecrets:
        - name: gitlab-scalehub
      containers:
        - name: workload-generator
          image: "{{image}}:{{tag}}"
          ports:
            - containerPort: 5701
              name: coordination
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_DNS_NAME
              value: "{{ lg_name }}.$(KUBERNETES_NAMESPACE).svc.cluster.local"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka-service:9092"
            - name: SCHEMA_REGISTRY_URL
              value: "http://schema-registry-service:8081"
            - name: KAFKA_INPUT_TOPIC
              value: "{{lg_topic}}"
            - name: NUM_SENSORS
              value: "{{lg_numsensors}}"
            - name: PERIOD_MS
              value: "{{lg_intervalms}}"
            - name: VALUE
              value: "{{lg_value}}"
            - name: THREADS
              value: "8"
            - name: CLUSTER_NAME_PREFIX
              value: "{{ lg_name }}"
          resources:
            limits:
              memory: 2Gi
              cpu: 500m
          # Start load_generator in paused state. It will be resumed by the experiment script by creating the /start_generation file
          command:
            - /bin/sh
            - -c
          args:
            - while [ ! -f /start_generation ]; do sleep 1; done; JAVA_OPTS="$JAVA_OPTS -Dorg.slf4j.simpleLogger.defaultLogLevel=$LOG_LEVEL" /uc1-load-generator/bin/uc1-load-generator