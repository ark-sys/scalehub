---
- name: Check if ip_stack is defined and valid
  fail:
    msg: "The ip_stack variable must be defined and set to either 'ipv4', 'ipv6', or 'dual'."
  when: ip_stack is not defined or ip_stack not in ['ipv4', 'ipv6', 'dual']

- name: Define INSTALL_K3S_EXEC if ip_stack is ipv6
  tags: [ create ]
  set_fact:
    INSTALL_K3S_EXEC: "--disable=traefik,local-storage  --flannel-ipv6-masq=true --data-dir=/tmp/k3s  --cluster-cidr=2001:cafe:42::/56 --service-cidr=2001:cafe:43::/112 --node-ip={{ ansible_default_ipv6.address }}"
  when: ip_stack == "ipv6"

- name: Define INSTALL_K3S_EXEC if ip_stack is ipv4
  tags: [ create ]
  set_fact:
    INSTALL_K3S_EXEC: "--disable=traefik,local-storage --data-dir=/tmp/k3s  --cluster-cidr=10.42.0.0/16 --service-cidr=10.43.0.0/16 --node-ip={{ ansible_default_ipv4.address }}"
  when: ip_stack == "ipv4"

- name: Define INSTALL_K3S_EXEC if ip_stack is dual
  tags: [ create ]
  set_fact:
    INSTALL_K3S_EXEC: "--disable=traefik,local-storage --flannel-ipv6-masq=true --data-dir=/tmp/k3s  --cluster-cidr=2001:cafe:42::/56,10.42.0.0/16 --service-cidr=2001:cafe:43::/112,10.43.0.0/16  --node-ip={{ ansible_default_ipv6.address }},{{ ansible_default_ipv4.address }} --node-external-ip={{ ansible_default_ipv6.address }}"
  when: ip_stack == "dual"

- name: Debug INSTALL_K3S_EXEC
  tags: [ create ]
  debug:
    var: INSTALL_K3S_EXEC

- name: Gather IPv6 facts
  tags: [ create ]
  when: ip_stack == "ipv6" or ip_stack == "dual"
  block:
    - name: Get control node's IPv6 default route
      ansible.builtin.shell:
        cmd: ip -6 route show default
      register: control_ipv6_default_route_with_via

    - name: Extract control node's IPv6 default route
      set_fact:
        control_ipv6_default_route: "{{ control_ipv6_default_route_with_via.stdout.split(' ')[2] }}"
      when: control_ipv6_default_route_with_via.stdout != ""

    - name: Debug control node's IPv6 default route
      debug:
        var: control_ipv6_default_route

- name: Install K3S and setup kubeconfig
  tags: [ create ]
  block:
    - name: Install k3s on controller
      environment:
        INSTALL_K3S_EXEC: "{{ INSTALL_K3S_EXEC }}"
        INSTALL_K3S_VERSION: "{{ K3S_VERSION }}"
      shell:
        cmd: "curl -sfL https://get.k3s.io | sh -s -"

    - name: Fix server address on control node with api_endpoint
      ansible.builtin.shell:
        kubectl config set-cluster default --server=https://{{ ansible_default_ipv4.address }}:6443

    - name: Get kubeconfig from controller
      ansible.builtin.shell:
        cmd: cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig_content

    - name: Get kubeconfig path
      set_fact:
        kubeconfig_path: "{{ lookup('env', 'KUBECONFIG') }}"

    - name: Save kubeconfig to localhost
      delegate_to: localhost
      ansible.builtin.copy:
        content: "{{ kubeconfig_content.stdout }}"
        dest: "{{ kubeconfig_path }}"
        mode: '644'

    - name: Wait for k3s to be ready
      ansible.builtin.wait_for:
        host: "{{ ansible_default_ipv4.address }}"
        port: 6443
        delay: 5
        timeout: 300

- name: Apply quickfixes if we are using IPv6 or dual stack
  tags: [ create ]
  when: ip_stack == "ipv6" or ip_stack == "dual"
  block:
    - name: Check if we still have a default route for IPv6
      command: ip -6 route show default
      register: control_ipv6_default_route_check

    - name: Quickfix default route for IPv6
      ansible.builtin.shell:
        cmd: ip -6 route add default via {{ control_ipv6_default_route }} dev br0
      when: control_ipv6_default_route_check.stdout == ""

#    - name: Deploy calico from file
#      delegate_to: localhost
#      kubernetes.core.k8s:
#        kubeconfig: "{{ kubeconfig_path }}"
#        state: present
#        definition: "{{ lookup('ansible.builtin.file', 'calico.yaml') | from_yaml_all }}"

- name: Uninstall k3s server
  tags: [ delete ]
  shell:
    cmd: "/usr/local/bin/k3s-uninstall.sh"
