---
- name: Retrieve values from scalehub configuration file
  tags: [ always ]
  block:
    - name: Get content of shub_config and read it as json
      set_fact:
        shub_config_content: "{{ shub_config | from_json }}"
    - name: Extract checkpoint_interval and window_size from shub_config
      set_fact:
        checkpoint_interval: "{{shub_config_content['experiment.flink.checkpoint_interval_ms']}}"
        window_size: "{{shub_config_content['experiment.flink.window_size_ms']}}"
        fibonacci_value: "{{shub_config_content['experiment.flink.fibonacci_value']}}"
        unchained_tasks: "{{shub_config_content['experiment.unchained_tasks']}}"

- name: Deploy Flink
  tags: [ create ]
  block:
    - name: Copy gitlab-scalehub secret from default namespace to flink namespace
      block:
        - name: Get gitlab-scalehub secret from default namespace
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Secret
            name: gitlab-scalehub
            namespace: default
          register: gitlab_scalehub_secret
        - name: Create gitlab-scalehub secret in flink namespace
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: gitlab-scalehub
                namespace: flink
              type: kubernetes.io/dockerconfigjson
              data:
                .dockerconfigjson: "{{ gitlab_scalehub_secret.resources[0].data['.dockerconfigjson'] }}"
    - name: Pre-pull image on nodes for faster rescale operation
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('ansible.builtin.template', 'flink-prepull-daemon.yaml.j2') | from_yaml }}"

    - name: Deploy services
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('ansible.builtin.file', item) | from_yaml_all }}"
      with_fileglob:
        - "../files/*.yaml"

    - name: Deploy ingress for Flink
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('ansible.builtin.file', 'flink-ingress.yaml') | from_yaml }}"

    - name: Deploy jobmanager
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('ansible.builtin.template', 'jobmanager-deployment.yaml.j2') | from_yaml }}"

    - name: Deploy taskmanager
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('ansible.builtin.template', 'taskmanager-deployment.yaml.j2') | from_yaml_all }}"

    - name: Scale instances of taskmanager-vm_small to 0
      kubernetes.core.k8s_scale:
        kind: Deployment
        namespace: flink
        name: flink-taskmanager-vm-small
        replicas: 0

    - name: Scale instances of taskmanager-vm_medium to 0
      kubernetes.core.k8s_scale:
        kind: Deployment
        name: flink-taskmanager-vm-medium
        namespace: flink
        replicas: 0

    - name: Scale instances of taskmanager-pico to 0
      kubernetes.core.k8s_scale:
        kind: Deployment
        name: flink-taskmanager-pico
        namespace: flink
        replicas: 0
- name: Delete Flink
  tags: [ delete ]
  block:
    - name: Delete services
      kubernetes.core.k8s:
        state: absent
        definition: "{{ lookup('ansible.builtin.file', item) | from_yaml_all }}"
      with_fileglob:
        - "../files/*.yaml"

    - name: Delete jobmanager
      kubernetes.core.k8s:
        state: absent
        definition: "{{ lookup('ansible.builtin.template', 'jobmanager-deployment.yaml.j2') | from_yaml }}"

    - name: Delete taskmanager
      kubernetes.core.k8s:
        state: absent
        definition: "{{ lookup('ansible.builtin.template', 'taskmanager-deployment.yaml.j2') | from_yaml_all }}"

    - name: Delete pre-pull daemon-set
      kubernetes.core.k8s:
        state: absent
        definition: "{{ lookup('ansible.builtin.template', 'flink-prepull-daemon.yaml.j2') | from_yaml }}"

    - name: Delete Ingress for Flink
      kubernetes.core.k8s:
        state: absent
        definition: "{{ lookup('ansible.builtin.file', 'flink-ingress.yaml') | from_yaml }}"