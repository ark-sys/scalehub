---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flink-jobmanager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flink
      component: jobmanager
  template:
    metadata:
      labels:
        app: flink
        component: jobmanager
    spec:
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      terminationGracePeriodSeconds: 0
      imagePullSecrets:
        - name: gitlab-scalehub
      containers:
        - name: jobmanager
          image: "{{image}}:{{tag}}"
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka-service:9092"
            - name: SCHEMA_REGISTRY_URL
              value: "http://schema-registry-service:8081"
            - name: CHECKPOINTING
              value: "true"
            - name: KAFKA_INPUT_TOPIC1
              value: "ad-events"
            - name: KAFKA_INPUT_TOPIC2
              value: "input-topic2"
            - name: KAFKA_OUTPUT_TOPIC
              value: "output-topic"
            - name: FLINK_STATE_BACKEND
              value: "rocksdb"
            - name: REDIS_HOST
              value: "redis-service"
            - name: ZOOKEEPER_SERVER
              value: "zookeeper-service"
            - name: CHECKPOINTING_INTERVAL_MS
              value: "{{ checkpoint_interval }}"
            - name: JOB_WINDOW_SIZE
              value: "{{ window_size }}"
            - name: FIB_INPUT
              value: "{{ fibonacci_value }}"
          resources:
            limits:
              memory: 8Gi
              cpu: 4000m
          args: [ "jobmanager" ]
          ports:
            - containerPort: 6123
              name: rpc
            - containerPort: 6124
              name: blob-server
            - containerPort: 8081
              name: webui
            - containerPort: 9249
              name: metrics
          livenessProbe:
            tcpSocket:
              port: 6123
            initialDelaySeconds: 30
            periodSeconds: 60
          volumeMounts:
            - name: flink-config-volume
              mountPath: /opt/flink/conf
            - name: data-volume
              mountPath: /mnt/data
            - name: artifacts-volume
              mountPath: /tmp/jobs
          securityContext:
            runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
      volumes:
        - name: flink-config-volume
          configMap:
            name: flink-config
            items:
              - key: flink-conf.yaml
                path: flink-conf.yaml
              - key: log4j-console.properties
                path: log4j-console.properties
        - name: data-volume
          hostPath:
            path: /tmp/experiment-data
        - name: artifacts-volume
          persistentVolumeClaim:
            claimName: artifacts-pvc
